// <auto-generated/>
#nullable enable

namespace Demo.Graphql
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class GetAllResult : global::System.IEquatable<GetAllResult>, IGetAllResult
    {
        public GetAllResult(global::System.Collections.Generic.IReadOnlyList<global::Demo.Graphql.IGetAll_Listings> listings)
        {
            Listings = listings;
        }

        public global::System.Collections.Generic.IReadOnlyList<global::Demo.Graphql.IGetAll_Listings> Listings { get; }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetAllResult)obj);
        }

        public global::System.Boolean Equals(GetAllResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Listings, other.Listings));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Listings_elm in Listings)
                {
                    hash ^= 397 * Listings_elm.GetHashCode();
                }

                return hash;
            }
        }
    }
}

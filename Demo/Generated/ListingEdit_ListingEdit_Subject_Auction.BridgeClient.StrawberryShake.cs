// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    /// <summary>
    /// Aukce - nabídka typu aukce
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class ListingEdit_ListingEdit_Subject_Auction : global::System.IEquatable<ListingEdit_ListingEdit_Subject_Auction>, IListingEdit_ListingEdit_Subject_Auction
    {
        public ListingEdit_ListingEdit_Subject_Auction(global::Logic.Graphql.Generated.IGetDetailAdmin_Listing_StartingPrice startingPrice, global::Logic.Graphql.Generated.ServiceType serviceType, global::Logic.Graphql.Generated.IGetDetailAdmin_Listing_Estate estate, global::Logic.Graphql.Generated.IGetDetailAdmin_Listing_Seller seller, global::System.String listingId, global::System.String? title, global::System.String? description, global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow> slideshow, global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Photos> photos, global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetDetail_Listing_Videos> videos, global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetDetail_Listing_FloorPlans> floorPlans, global::Logic.Graphql.Generated.ListingState state, global::System.DateTimeOffset created, global::System.DateTimeOffset? published, global::System.DateTimeOffset? closed)
        {
            StartingPrice = startingPrice;
            ServiceType = serviceType;
            Estate = estate;
            Seller = seller;
            ListingId = listingId;
            Title = title;
            Description = description;
            Slideshow = slideshow;
            Photos = photos;
            Videos = videos;
            FloorPlans = floorPlans;
            State = state;
            Created = created;
            Published = published;
            Closed = closed;
        }

        public global::Logic.Graphql.Generated.IGetDetailAdmin_Listing_StartingPrice StartingPrice { get; }

        public global::Logic.Graphql.Generated.ServiceType ServiceType { get; }

        public global::Logic.Graphql.Generated.IGetDetailAdmin_Listing_Estate Estate { get; }

        public global::Logic.Graphql.Generated.IGetDetailAdmin_Listing_Seller Seller { get; }

        public global::System.String ListingId { get; }

        public global::System.String? Title { get; }

        public global::System.String? Description { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow> Slideshow { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Photos> Photos { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetDetail_Listing_Videos> Videos { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetDetail_Listing_FloorPlans> FloorPlans { get; }

        public global::Logic.Graphql.Generated.ListingState State { get; }

        public global::System.DateTimeOffset Created { get; }

        public global::System.DateTimeOffset? Published { get; }

        public global::System.DateTimeOffset? Closed { get; }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ListingEdit_ListingEdit_Subject_Auction)obj);
        }

        public global::System.Boolean Equals(ListingEdit_ListingEdit_Subject_Auction? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (StartingPrice.Equals(other.StartingPrice)) && ServiceType.Equals(other.ServiceType) && Estate.Equals(other.Estate) && Seller.Equals(other.Seller) && ListingId.Equals(other.ListingId) && ((Title is null && other.Title is null) || Title != null && Title.Equals(other.Title)) && ((Description is null && other.Description is null) || Description != null && Description.Equals(other.Description)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Slideshow, other.Slideshow) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Photos, other.Photos) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Videos, other.Videos) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(FloorPlans, other.FloorPlans) && State.Equals(other.State) && Created.Equals(other.Created) && ((Published is null && other.Published is null) || Published != null && Published.Equals(other.Published)) && ((Closed is null && other.Closed is null) || Closed != null && Closed.Equals(other.Closed));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * StartingPrice.GetHashCode();
                hash ^= 397 * ServiceType.GetHashCode();
                hash ^= 397 * Estate.GetHashCode();
                hash ^= 397 * Seller.GetHashCode();
                hash ^= 397 * ListingId.GetHashCode();
                if (Title != null)
                {
                    hash ^= 397 * Title.GetHashCode();
                }

                if (Description != null)
                {
                    hash ^= 397 * Description.GetHashCode();
                }

                foreach (var Slideshow_elm in Slideshow)
                {
                    hash ^= 397 * Slideshow_elm.GetHashCode();
                }

                foreach (var Photos_elm in Photos)
                {
                    hash ^= 397 * Photos_elm.GetHashCode();
                }

                foreach (var Videos_elm in Videos)
                {
                    hash ^= 397 * Videos_elm.GetHashCode();
                }

                foreach (var FloorPlans_elm in FloorPlans)
                {
                    hash ^= 397 * FloorPlans_elm.GetHashCode();
                }

                hash ^= 397 * State.GetHashCode();
                hash ^= 397 * Created.GetHashCode();
                if (Published != null)
                {
                    hash ^= 397 * Published.GetHashCode();
                }

                if (Closed != null)
                {
                    hash ^= 397 * Closed.GetHashCode();
                }

                return hash;
            }
        }
    }
}

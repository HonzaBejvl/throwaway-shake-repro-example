// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class GetCurrentViewerListingsResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::Logic.Graphql.Generated.GetCurrentViewerListingsResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCurrentViewerListingsResultFactory(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::Logic.Graphql.Generated.IGetCurrentViewerListingsResult);
        public GetCurrentViewerListingsResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetCurrentViewerListingsResultInfo info)
            {
                return new GetCurrentViewerListingsResult(MapNonNullableIGetCurrentViewerListings_Viewer(info.Viewer, snapshot));
            }

            throw new global::System.ArgumentException("GetCurrentViewerListingsResultInfo expected.");
        }

        private global::Logic.Graphql.Generated.IGetCurrentViewerListings_Viewer MapNonNullableIGetCurrentViewerListings_Viewer(global::Logic.Graphql.Generated.State.ViewerData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetCurrentViewerListings_Viewer returnValue = default !;
            if (data.__typename.Equals("Viewer", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetCurrentViewerListings_Viewer_Viewer(MapNonNullableIGetCurrentViewerListings_Viewer_SellersNonNullableArray(data.Sellers ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetCurrentViewerListings_Viewer_Sellers> MapNonNullableIGetCurrentViewerListings_Viewer_SellersNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.State.ViewerSellerData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var viewerSellers = new global::System.Collections.Generic.List<global::Logic.Graphql.Generated.IGetCurrentViewerListings_Viewer_Sellers>();
            foreach (global::Logic.Graphql.Generated.State.ViewerSellerData child in list)
            {
                viewerSellers.Add(MapNonNullableIGetCurrentViewerListings_Viewer_Sellers(child, snapshot));
            }

            return viewerSellers;
        }

        private global::Logic.Graphql.Generated.IGetCurrentViewerListings_Viewer_Sellers MapNonNullableIGetCurrentViewerListings_Viewer_Sellers(global::Logic.Graphql.Generated.State.ViewerSellerData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetCurrentViewerListings_Viewer_Sellers returnValue = default !;
            if (data.__typename.Equals("ViewerSeller", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetCurrentViewerListings_Viewer_Sellers_ViewerSeller(MapNonNullableIGetCurrentViewerListings_Viewer_Sellers_ListingsNonNullableArray(data.Listings ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetCurrentViewerListings_Viewer_Sellers_Listings> MapNonNullableIGetCurrentViewerListings_Viewer_Sellers_ListingsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.State.IListingData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var listings = new global::System.Collections.Generic.List<global::Logic.Graphql.Generated.IGetCurrentViewerListings_Viewer_Sellers_Listings>();
            foreach (global::Logic.Graphql.Generated.State.IListingData child in list)
            {
                listings.Add(MapNonNullableIGetCurrentViewerListings_Viewer_Sellers_Listings(child, snapshot));
            }

            return listings;
        }

        private global::Logic.Graphql.Generated.IGetCurrentViewerListings_Viewer_Sellers_Listings MapNonNullableIGetCurrentViewerListings_Viewer_Sellers_Listings(global::Logic.Graphql.Generated.State.IListingData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetCurrentViewerListings_Viewer_Sellers_Listings? returnValue;
            if (data is global::Logic.Graphql.Generated.State.AuctionData auction)
            {
                if (auction.ServiceType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetCurrentViewerListings_Viewer_Sellers_Listings_Auction(MapNonNullableIGetListingCards_Listings_Items_StartingPrice(auction.StartingPrice, snapshot), auction.ServiceType!.Value, MapNonNullableIGetListingCards_Listings_Items_Estate(auction.Estate, snapshot), auction.ListingId ?? throw new global::System.ArgumentNullException(), auction.Title, MapNonNullableIGetListingCards_Listings_Items_SlideshowNonNullableArray(auction.Slideshow, snapshot), MapNonNullableIGetListingCards_Listings_Items_PhotosNonNullableArray(auction.Photos, snapshot));
            }
            else if (data is global::Logic.Graphql.Generated.State.OfferData offer)
            {
                if (offer.ServiceType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetCurrentViewerListings_Viewer_Sellers_Listings_Offer(MapNonNullableIGetListingCards_Listings_Items_Price(offer.Price, snapshot), offer.ServiceType!.Value, MapNonNullableIGetListingCards_Listings_Items_Estate_1(offer.Estate, snapshot), offer.ListingId ?? throw new global::System.ArgumentNullException(), offer.Title, MapNonNullableIGetListingCards_Listings_Items_SlideshowNonNullableArray(offer.Slideshow, snapshot), MapNonNullableIGetListingCards_Listings_Items_PhotosNonNullableArray(offer.Photos, snapshot));
            }
            else if (data is global::Logic.Graphql.Generated.State.ProjectData project)
            {
                if (project.ListingCount.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetCurrentViewerListings_Viewer_Sellers_Listings_Project(project.ListingCount!.Value, MapNonNullableIGetListingCards_Listings_Items_ListingsNonNullableArray(project.Listings, snapshot), project.ListingId ?? throw new global::System.ArgumentNullException(), project.Title, MapNonNullableIGetListingCards_Listings_Items_SlideshowNonNullableArray(project.Slideshow, snapshot), MapNonNullableIGetListingCards_Listings_Items_PhotosNonNullableArray(project.Photos, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_StartingPrice MapNonNullableIGetListingCards_Listings_Items_StartingPrice(global::Logic.Graphql.Generated.State.PriceData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_StartingPrice returnValue = default !;
            if (data.__typename.Equals("Price", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetListingCards_Listings_Items_StartingPrice_Price(data.Value ?? throw new global::System.ArgumentNullException(), data.OriginalCurrency ?? throw new global::System.ArgumentNullException(), data.Period ?? throw new global::System.ArgumentNullException(), data.Unit ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Estate MapNonNullableIGetListingCards_Listings_Items_Estate(global::Logic.Graphql.Generated.State.EstateData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Estate returnValue = default !;
            if (data.__typename.Equals("Estate", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetListingCards_Listings_Items_Estate_Estate(data.Type ?? throw new global::System.ArgumentNullException(), data.Electricity ?? throw new global::System.ArgumentNullException(), data.Gas ?? throw new global::System.ArgumentNullException(), data.Water ?? throw new global::System.ArgumentNullException(), data.Heating ?? throw new global::System.ArgumentNullException(), data.Waste ?? throw new global::System.ArgumentNullException(), data.Road ?? throw new global::System.ArgumentNullException(), data.NatureProtection ?? throw new global::System.ArgumentNullException(), data.Connectivity ?? throw new global::System.ArgumentNullException(), MapNonNullableIGetListingCards_Listings_Items_Estate_TypeInfo(data.TypeInfo ?? throw new global::System.ArgumentNullException(), snapshot), MapNonNullableIGetListingCards_Listings_Items_Estate_Address(data.Address ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Estate_TypeInfo MapNonNullableIGetListingCards_Listings_Items_Estate_TypeInfo(global::Logic.Graphql.Generated.State.IEstateTypeInfoData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Estate_TypeInfo? returnValue;
            if (data is global::Logic.Graphql.Generated.State.ApartmentInfoData apartmentInfo)
            {
                if (apartmentInfo.ApartmentType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.UsableArea.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.Material.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.EnergyEfficiency.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.EnergyCertificate.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.Condition.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.CeilingHeight.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.AcceptanceYear.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.ConstructionYear.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.RoomCount.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.FloorNumber.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (apartmentInfo.Placement.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Estate_TypeInfo_ApartmentInfo(apartmentInfo.ApartmentType!.Value, apartmentInfo.UsableArea!.Value, apartmentInfo.Material!.Value, apartmentInfo.EnergyEfficiency!.Value, apartmentInfo.EnergyCertificate!.Value, apartmentInfo.Condition!.Value, apartmentInfo.BalconyArea, apartmentInfo.TerraceArea, apartmentInfo.LoggiaArea, apartmentInfo.CellarArea, apartmentInfo.CeilingHeight!.Value, apartmentInfo.PoolArea, apartmentInfo.AcceptanceYear!.Value, apartmentInfo.ConstructionYear!.Value, apartmentInfo.ReconstructionYear, apartmentInfo.Amenities, apartmentInfo.RoomCount!.Value, apartmentInfo.FloorNumber!.Value, apartmentInfo.ApartmentNumber ?? throw new global::System.ArgumentNullException(), apartmentInfo.Placement!.Value, apartmentInfo.SpecialClass);
            }
            else if (data is global::Logic.Graphql.Generated.State.HouseInfoData houseInfo)
            {
                if (houseInfo.HouseType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.EnergyEfficiency.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.EnergyCertificate.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.Condition.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.Material.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.Placement.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.RoomCount.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.CeilingHeight.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.UsableArea.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.ConstructionYear.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.AcceptanceYear.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (houseInfo.LandArea.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Estate_TypeInfo_HouseInfo(houseInfo.HouseType!.Value, houseInfo.EnergyEfficiency!.Value, houseInfo.EnergyCertificate!.Value, houseInfo.Condition!.Value, houseInfo.Material!.Value, houseInfo.Placement!.Value, houseInfo.RoomCount!.Value, houseInfo.CeilingHeight!.Value, houseInfo.Amenities, houseInfo.UsableArea!.Value, houseInfo.BalconyArea, houseInfo.TerraceArea, houseInfo.LoggiaArea, houseInfo.ReconstructionYear, houseInfo.ConstructionYear!.Value, houseInfo.AcceptanceYear!.Value, houseInfo.CellarArea, houseInfo.PoolArea, houseInfo.LandArea!.Value);
            }
            else if (data is global::Logic.Graphql.Generated.State.LandInfoData landInfo)
            {
                if (landInfo.LandlType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (landInfo.LandArea.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Estate_TypeInfo_LandInfo(landInfo.LandlType!.Value, landInfo.LandArea!.Value);
            }
            else if (data is global::Logic.Graphql.Generated.State.CommercialInfoData commercialInfo)
            {
                if (commercialInfo.CommercialType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.EnergyEfficiency.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.EnergyCertificate.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.Condition.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.Material.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.Placement.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.RoomCount.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.CeilingHeight.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.UsableArea.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.ConstructionYear.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (commercialInfo.AcceptanceYear.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Estate_TypeInfo_CommercialInfo(commercialInfo.CommercialType!.Value, commercialInfo.EnergyEfficiency!.Value, commercialInfo.EnergyCertificate!.Value, commercialInfo.Condition!.Value, commercialInfo.Material!.Value, commercialInfo.Placement!.Value, commercialInfo.RoomCount!.Value, commercialInfo.CeilingHeight!.Value, commercialInfo.Amenities, commercialInfo.UsableArea!.Value, commercialInfo.BalconyArea, commercialInfo.TerraceArea, commercialInfo.LoggiaArea, commercialInfo.CellarArea, commercialInfo.PoolArea, commercialInfo.ConstructionYear!.Value, commercialInfo.AcceptanceYear!.Value, commercialInfo.ReconstructionYear, commercialInfo.StoreArea, commercialInfo.OfficeArea, commercialInfo.WarehouseArea, commercialInfo.ProductionArea);
            }
            else if (data is global::Logic.Graphql.Generated.State.GarageInfoData garageInfo)
            {
                if (garageInfo.GarageType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (garageInfo.UsableArea.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Estate_TypeInfo_GarageInfo(garageInfo.GarageType!.Value, garageInfo.UsableArea!.Value);
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Estate_Address MapNonNullableIGetListingCards_Listings_Items_Estate_Address(global::Logic.Graphql.Generated.State.AddressListingData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Estate_Address returnValue = default !;
            if (data.__typename.Equals("AddressListing", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetListingCards_Listings_Items_Estate_Address_AddressListing(data.Lat, data.Lng, data.CityName ?? throw new global::System.ArgumentNullException(), data.StreetName, data.RuianCode);
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow> MapNonNullableIGetListingCards_Listings_Items_SlideshowNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.State.ISlideData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var slides = new global::System.Collections.Generic.List<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow>();
            foreach (global::Logic.Graphql.Generated.State.ISlideData child in list)
            {
                slides.Add(MapNonNullableIGetListingCards_Listings_Items_Slideshow(child, snapshot));
            }

            return slides;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow MapNonNullableIGetListingCards_Listings_Items_Slideshow(global::Logic.Graphql.Generated.State.ISlideData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Slideshow? returnValue;
            if (data is global::Logic.Graphql.Generated.State.SlideDoubleData slideDouble)
            {
                if (slideDouble.Index.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (slideDouble.Layout.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_SlideDouble(slideDouble.Index!.Value, slideDouble.Layout!.Value, MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemOne(slideDouble.ItemOne, snapshot), MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemTwo(slideDouble.ItemTwo, snapshot));
            }
            else if (data is global::Logic.Graphql.Generated.State.SlideSingleData slideSingle)
            {
                if (slideSingle.Index.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_SlideSingle(slideSingle.Index!.Value, MapNonNullableIGetListingCards_Listings_Items_Slideshow_Item(slideSingle.Item, snapshot));
            }
            else if (data is global::Logic.Graphql.Generated.State.SlideTripleData slideTriple)
            {
                if (slideTriple.Index.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                if (slideTriple.Layout.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_SlideTriple(slideTriple.Index!.Value, slideTriple.Layout!.Value, MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemOne_1(slideTriple.ItemOne, snapshot), MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemTwo_1(slideTriple.ItemTwo, snapshot), MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemThree(slideTriple.ItemThree, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow_ItemOne MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemOne(global::Logic.Graphql.Generated.State.IFigureData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Slideshow_ItemOne? returnValue;
            if (data is global::Logic.Graphql.Generated.State.FloorPlanData floorPlan)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemOne_FloorPlan();
            }
            else if (data is global::Logic.Graphql.Generated.State.MatterportData matterport)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemOne_Matterport(matterport.Url ?? throw new global::System.ArgumentNullException());
            }
            else if (data is global::Logic.Graphql.Generated.State.PhotoData photo)
            {
                if (photo.Is360.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemOne_Photo(photo.FigureId ?? throw new global::System.ArgumentNullException(), photo.Url ?? throw new global::System.ArgumentNullException(), photo.OriginalUrl ?? throw new global::System.ArgumentNullException(), photo.Is360!.Value);
            }
            else if (data is global::Logic.Graphql.Generated.State.VideoData video)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemOne_Video(video.Url ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow_ItemTwo MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemTwo(global::Logic.Graphql.Generated.State.IFigureData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Slideshow_ItemTwo? returnValue;
            if (data is global::Logic.Graphql.Generated.State.FloorPlanData floorPlan)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemTwo_FloorPlan();
            }
            else if (data is global::Logic.Graphql.Generated.State.MatterportData matterport)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemTwo_Matterport(matterport.Url ?? throw new global::System.ArgumentNullException());
            }
            else if (data is global::Logic.Graphql.Generated.State.PhotoData photo)
            {
                if (photo.Is360.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemTwo_Photo(photo.FigureId ?? throw new global::System.ArgumentNullException(), photo.Url ?? throw new global::System.ArgumentNullException(), photo.OriginalUrl ?? throw new global::System.ArgumentNullException(), photo.Is360!.Value);
            }
            else if (data is global::Logic.Graphql.Generated.State.VideoData video)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemTwo_Video(video.Url ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow_Item MapNonNullableIGetListingCards_Listings_Items_Slideshow_Item(global::Logic.Graphql.Generated.State.IFigureData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Slideshow_Item? returnValue;
            if (data is global::Logic.Graphql.Generated.State.FloorPlanData floorPlan)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_Item_FloorPlan();
            }
            else if (data is global::Logic.Graphql.Generated.State.MatterportData matterport)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_Item_Matterport(matterport.Url ?? throw new global::System.ArgumentNullException());
            }
            else if (data is global::Logic.Graphql.Generated.State.PhotoData photo)
            {
                if (photo.Is360.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_Item_Photo(photo.FigureId ?? throw new global::System.ArgumentNullException(), photo.Url ?? throw new global::System.ArgumentNullException(), photo.OriginalUrl ?? throw new global::System.ArgumentNullException(), photo.Is360!.Value);
            }
            else if (data is global::Logic.Graphql.Generated.State.VideoData video)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_Item_Video(video.Url ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow_ItemOne_1 MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemOne_1(global::Logic.Graphql.Generated.State.IFigureData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Slideshow_ItemOne_1? returnValue;
            if (data is global::Logic.Graphql.Generated.State.FloorPlanData floorPlan)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemOne_FloorPlan_1();
            }
            else if (data is global::Logic.Graphql.Generated.State.MatterportData matterport)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemOne_Matterport_1(matterport.Url ?? throw new global::System.ArgumentNullException());
            }
            else if (data is global::Logic.Graphql.Generated.State.PhotoData photo)
            {
                if (photo.Is360.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemOne_Photo_1(photo.FigureId ?? throw new global::System.ArgumentNullException(), photo.Url ?? throw new global::System.ArgumentNullException(), photo.OriginalUrl ?? throw new global::System.ArgumentNullException(), photo.Is360!.Value);
            }
            else if (data is global::Logic.Graphql.Generated.State.VideoData video)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemOne_Video_1(video.Url ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow_ItemTwo_1 MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemTwo_1(global::Logic.Graphql.Generated.State.IFigureData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Slideshow_ItemTwo_1? returnValue;
            if (data is global::Logic.Graphql.Generated.State.FloorPlanData floorPlan)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemTwo_FloorPlan_1();
            }
            else if (data is global::Logic.Graphql.Generated.State.MatterportData matterport)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemTwo_Matterport_1(matterport.Url ?? throw new global::System.ArgumentNullException());
            }
            else if (data is global::Logic.Graphql.Generated.State.PhotoData photo)
            {
                if (photo.Is360.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemTwo_Photo_1(photo.FigureId ?? throw new global::System.ArgumentNullException(), photo.Url ?? throw new global::System.ArgumentNullException(), photo.OriginalUrl ?? throw new global::System.ArgumentNullException(), photo.Is360!.Value);
            }
            else if (data is global::Logic.Graphql.Generated.State.VideoData video)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemTwo_Video_1(video.Url ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Slideshow_ItemThree MapNonNullableIGetListingCards_Listings_Items_Slideshow_ItemThree(global::Logic.Graphql.Generated.State.IFigureData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Slideshow_ItemThree? returnValue;
            if (data is global::Logic.Graphql.Generated.State.FloorPlanData floorPlan)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemThree_FloorPlan();
            }
            else if (data is global::Logic.Graphql.Generated.State.MatterportData matterport)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemThree_Matterport(matterport.Url ?? throw new global::System.ArgumentNullException());
            }
            else if (data is global::Logic.Graphql.Generated.State.PhotoData photo)
            {
                if (photo.Is360.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemThree_Photo(photo.FigureId ?? throw new global::System.ArgumentNullException(), photo.Url ?? throw new global::System.ArgumentNullException(), photo.OriginalUrl ?? throw new global::System.ArgumentNullException(), photo.Is360!.Value);
            }
            else if (data is global::Logic.Graphql.Generated.State.VideoData video)
            {
                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Slideshow_ItemThree_Video(video.Url ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Photos> MapNonNullableIGetListingCards_Listings_Items_PhotosNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.State.PhotoData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var photos = new global::System.Collections.Generic.List<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Photos>();
            foreach (global::Logic.Graphql.Generated.State.PhotoData child in list)
            {
                photos.Add(MapNonNullableIGetListingCards_Listings_Items_Photos(child, snapshot));
            }

            return photos;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Photos MapNonNullableIGetListingCards_Listings_Items_Photos(global::Logic.Graphql.Generated.State.PhotoData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Photos returnValue = default !;
            if (data.__typename.Equals("Photo", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetListingCards_Listings_Items_Photos_Photo(data.FigureId ?? throw new global::System.ArgumentNullException(), data.Url ?? throw new global::System.ArgumentNullException(), data.OriginalUrl ?? throw new global::System.ArgumentNullException(), data.Is360 ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Price MapNonNullableIGetListingCards_Listings_Items_Price(global::Logic.Graphql.Generated.State.PriceData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Price returnValue = default !;
            if (data.__typename.Equals("Price", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetListingCards_Listings_Items_Price_Price(data.Value ?? throw new global::System.ArgumentNullException(), data.OriginalCurrency ?? throw new global::System.ArgumentNullException(), data.Period ?? throw new global::System.ArgumentNullException(), data.Unit ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Estate_1 MapNonNullableIGetListingCards_Listings_Items_Estate_1(global::Logic.Graphql.Generated.State.EstateData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Estate_1 returnValue = default !;
            if (data.__typename.Equals("Estate", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetListingCards_Listings_Items_Estate_Estate_1(data.Type ?? throw new global::System.ArgumentNullException(), data.Electricity ?? throw new global::System.ArgumentNullException(), data.Gas ?? throw new global::System.ArgumentNullException(), data.Water ?? throw new global::System.ArgumentNullException(), data.Heating ?? throw new global::System.ArgumentNullException(), data.Waste ?? throw new global::System.ArgumentNullException(), data.Road ?? throw new global::System.ArgumentNullException(), data.NatureProtection ?? throw new global::System.ArgumentNullException(), data.Connectivity ?? throw new global::System.ArgumentNullException(), MapNonNullableIGetListingCards_Listings_Items_Estate_TypeInfo(data.TypeInfo ?? throw new global::System.ArgumentNullException(), snapshot), MapNonNullableIGetListingCards_Listings_Items_Estate_Address(data.Address ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Listings> MapNonNullableIGetListingCards_Listings_Items_ListingsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::Logic.Graphql.Generated.State.ProjectListingData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var projectListings = new global::System.Collections.Generic.List<global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Listings>();
            foreach (global::Logic.Graphql.Generated.State.ProjectListingData child in list)
            {
                projectListings.Add(MapNonNullableIGetListingCards_Listings_Items_Listings(child, snapshot));
            }

            return projectListings;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Listings MapNonNullableIGetListingCards_Listings_Items_Listings(global::Logic.Graphql.Generated.State.ProjectListingData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Listings returnValue = default !;
            if (data.__typename.Equals("ProjectListing", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetListingCards_Listings_Items_Listings_ProjectListing(data.SatisfiesFilter ?? throw new global::System.ArgumentNullException(), MapNonNullableIGetListingCards_Listings_Items_Listings_Listing(data.Listing ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Listings_Listing MapNonNullableIGetListingCards_Listings_Items_Listings_Listing(global::Logic.Graphql.Generated.State.IListingSimpleData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetListingCards_Listings_Items_Listings_Listing? returnValue;
            if (data is global::Logic.Graphql.Generated.State.AuctionData auction)
            {
                if (auction.ServiceType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Listings_Listing_Auction(auction.ListingId ?? throw new global::System.ArgumentNullException(), MapNonNullableIGetListingCards_Listings_Items_StartingPrice(auction.StartingPrice, snapshot), auction.ServiceType!.Value, MapNonNullableIGetListingCards_Listings_Items_Estate(auction.Estate, snapshot));
            }
            else if (data is global::Logic.Graphql.Generated.State.OfferData offer)
            {
                if (offer.ServiceType.HasValue)
                {
                    throw new global::System.ArgumentNullException();
                }

                returnValue = new global::Logic.Graphql.Generated.GetListingCards_Listings_Items_Listings_Listing_Offer(offer.ListingId ?? throw new global::System.ArgumentNullException(), MapNonNullableIGetListingCards_Listings_Items_Price(offer.Price, snapshot), offer.ServiceType!.Value, MapNonNullableIGetListingCards_Listings_Items_Estate_1(offer.Estate, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }
}

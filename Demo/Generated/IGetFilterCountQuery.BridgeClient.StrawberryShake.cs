// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    /// <summary>
    /// Represents the operation service of the GetFilterCount GraphQL operation
    /// <code>
    /// query GetFilterCount($filter: ListingFilter!) {
    ///   listings(filter: $filter) {
    ///     __typename
    ///     ... ListingsPayloadCount
    ///   }
    /// }
    /// 
    /// fragment ListingsPayloadCount on ListingsPayload {
    ///   count
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public interface IGetFilterCountQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetFilterCountResult>> ExecuteAsync(global::Logic.Graphql.Generated.ListingFilter filter, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetFilterCountResult>> Watch(global::Logic.Graphql.Generated.ListingFilter filter, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }
}

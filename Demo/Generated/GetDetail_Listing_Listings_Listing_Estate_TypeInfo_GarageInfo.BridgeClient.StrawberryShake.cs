// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    /// <summary>
    /// Doplnující informace pro garáže a ostatní nemovitosti
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class GetDetail_Listing_Listings_Listing_Estate_TypeInfo_GarageInfo : global::System.IEquatable<GetDetail_Listing_Listings_Listing_Estate_TypeInfo_GarageInfo>, IGetDetail_Listing_Listings_Listing_Estate_TypeInfo_GarageInfo
    {
        public GetDetail_Listing_Listings_Listing_Estate_TypeInfo_GarageInfo(global::Logic.Graphql.Generated.GarageType garageType, global::System.Double usableArea)
        {
            GarageType = garageType;
            UsableArea = usableArea;
        }

        public global::Logic.Graphql.Generated.GarageType GarageType { get; }

        public global::System.Double UsableArea { get; }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetDetail_Listing_Listings_Listing_Estate_TypeInfo_GarageInfo)obj);
        }

        public global::System.Boolean Equals(GetDetail_Listing_Listings_Listing_Estate_TypeInfo_GarageInfo? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (GarageType.Equals(other.GarageType)) && UsableArea == other.UsableArea;
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * GarageType.GetHashCode();
                hash ^= 397 * UsableArea.GetHashCode();
                return hash;
            }
        }
    }
}

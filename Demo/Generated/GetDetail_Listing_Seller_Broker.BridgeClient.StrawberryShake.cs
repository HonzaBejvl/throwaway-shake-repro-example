// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class GetDetail_Listing_Seller_Broker : global::System.IEquatable<GetDetail_Listing_Seller_Broker>, IGetDetail_Listing_Seller_Broker
    {
        public GetDetail_Listing_Seller_Broker(global::System.String sellerId, global::System.String name, global::Logic.Graphql.Generated.IGetDetail_Listing_Seller_Photo photo, global::Logic.Graphql.Generated.IGetDetail_Listing_Seller_Company_3 company)
        {
            SellerId = sellerId;
            Name = name;
            Photo = photo;
            Company = company;
        }

        public global::System.String SellerId { get; }

        public global::System.String Name { get; }

        public global::Logic.Graphql.Generated.IGetDetail_Listing_Seller_Photo Photo { get; }

        public global::Logic.Graphql.Generated.IGetDetail_Listing_Seller_Company_3 Company { get; }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetDetail_Listing_Seller_Broker)obj);
        }

        public global::System.Boolean Equals(GetDetail_Listing_Seller_Broker? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (SellerId.Equals(other.SellerId)) && Name.Equals(other.Name) && Photo.Equals(other.Photo) && Company.Equals(other.Company);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * SellerId.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Photo.GetHashCode();
                hash ^= 397 * Company.GetHashCode();
                return hash;
            }
        }
    }
}

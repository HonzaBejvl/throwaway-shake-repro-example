// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    /// <summary>
    /// Aukce - nabídka typu aukce
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class GetDetail_Listing_Listings_Listing_Auction : global::System.IEquatable<GetDetail_Listing_Listings_Listing_Auction>, IGetDetail_Listing_Listings_Listing_Auction
    {
        public GetDetail_Listing_Listings_Listing_Auction(global::System.String listingId, global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_StartingPrice startingPrice, global::Logic.Graphql.Generated.ServiceType serviceType, global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Estate estate)
        {
            ListingId = listingId;
            StartingPrice = startingPrice;
            ServiceType = serviceType;
            Estate = estate;
        }

        public global::System.String ListingId { get; }

        public global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_StartingPrice StartingPrice { get; }

        public global::Logic.Graphql.Generated.ServiceType ServiceType { get; }

        public global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Estate Estate { get; }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetDetail_Listing_Listings_Listing_Auction)obj);
        }

        public global::System.Boolean Equals(GetDetail_Listing_Listings_Listing_Auction? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (ListingId.Equals(other.ListingId)) && StartingPrice.Equals(other.StartingPrice) && ServiceType.Equals(other.ServiceType) && Estate.Equals(other.Estate);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * ListingId.GetHashCode();
                hash ^= 397 * StartingPrice.GetHashCode();
                hash ^= 397 * ServiceType.GetHashCode();
                hash ^= 397 * Estate.GetHashCode();
                return hash;
            }
        }
    }
}

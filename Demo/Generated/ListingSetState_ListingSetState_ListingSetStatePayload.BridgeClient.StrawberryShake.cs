// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    /// <summary>
    /// Výsledek operace změny stavu nabídky.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class ListingSetState_ListingSetState_ListingSetStatePayload : global::System.IEquatable<ListingSetState_ListingSetState_ListingSetStatePayload>, IListingSetState_ListingSetState_ListingSetStatePayload
    {
        public ListingSetState_ListingSetState_ListingSetStatePayload(global::Logic.Graphql.Generated.IListingSetState_ListingSetState_Subject subject, global::Logic.Graphql.Generated.ListingState oldState, global::Logic.Graphql.Generated.ListingState newState)
        {
            Subject = subject;
            OldState = oldState;
            NewState = newState;
        }

        public global::Logic.Graphql.Generated.IListingSetState_ListingSetState_Subject Subject { get; }

        public global::Logic.Graphql.Generated.ListingState OldState { get; }

        public global::Logic.Graphql.Generated.ListingState NewState { get; }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ListingSetState_ListingSetState_ListingSetStatePayload)obj);
        }

        public global::System.Boolean Equals(ListingSetState_ListingSetState_ListingSetStatePayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Subject.Equals(other.Subject)) && OldState.Equals(other.OldState) && NewState.Equals(other.NewState);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Subject.GetHashCode();
                hash ^= 397 * OldState.GetHashCode();
                hash ^= 397 * NewState.GetHashCode();
                return hash;
            }
        }
    }
}

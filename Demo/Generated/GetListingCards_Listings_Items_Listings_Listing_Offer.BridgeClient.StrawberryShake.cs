// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    /// <summary>
    /// Standardní nabídka
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class GetListingCards_Listings_Items_Listings_Listing_Offer : global::System.IEquatable<GetListingCards_Listings_Items_Listings_Listing_Offer>, IGetListingCards_Listings_Items_Listings_Listing_Offer
    {
        public GetListingCards_Listings_Items_Listings_Listing_Offer(global::System.String listingId, global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Price price, global::Logic.Graphql.Generated.ServiceType serviceType, global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Estate_1 estate)
        {
            ListingId = listingId;
            Price = price;
            ServiceType = serviceType;
            Estate = estate;
        }

        public global::System.String ListingId { get; }

        public global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Price Price { get; }

        public global::Logic.Graphql.Generated.ServiceType ServiceType { get; }

        public global::Logic.Graphql.Generated.IGetListingCards_Listings_Items_Estate_1 Estate { get; }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetListingCards_Listings_Items_Listings_Listing_Offer)obj);
        }

        public global::System.Boolean Equals(GetListingCards_Listings_Items_Listings_Listing_Offer? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (ListingId.Equals(other.ListingId)) && Price.Equals(other.Price) && ServiceType.Equals(other.ServiceType) && Estate.Equals(other.Estate);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * ListingId.GetHashCode();
                hash ^= 397 * Price.GetHashCode();
                hash ^= 397 * ServiceType.GetHashCode();
                hash ^= 397 * Estate.GetHashCode();
                return hash;
            }
        }
    }
}

// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class LandInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _landTypeFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _floatFormatter = default !;
        public global::System.String TypeName => "LandInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _landTypeFormatter = serializerResolver.GetInputValueFormatter("LandType");
            _floatFormatter = serializerResolver.GetInputValueFormatter("Float");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::Logic.Graphql.Generated.LandInput;
            var inputInfo = runtimeValue as global::Logic.Graphql.Generated.State.ILandInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsTypeSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("type", FormatType(input.Type)));
            }

            if (inputInfo.IsLandAreaSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("landArea", FormatLandArea(input.LandArea)));
            }

            return fields;
        }

        private global::System.Object? FormatType(global::Logic.Graphql.Generated.LandType input)
        {
            return _landTypeFormatter.Format(input);
        }

        private global::System.Object? FormatLandArea(global::System.Double input)
        {
            return _floatFormatter.Format(input);
        }
    }
}

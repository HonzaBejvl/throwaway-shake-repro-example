// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class LandTypeSerializer : global::StrawberryShake.Serialization.IInputValueFormatter, global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, LandType>
    {
        public global::System.String TypeName => "LandType";
        public LandType Parse(global::System.String serializedValue)
        {
            return serializedValue switch
            {
            "LAND_HOUSING" => LandType.LandHousing, "LAND_COMMERCIAL" => LandType.LandCommercial, "LAND_FIELD" => LandType.LandField, "LAND_MEADOW" => LandType.LandMeadow, "LAND_FOREST" => LandType.LandForest, "LAND_POND" => LandType.LandPond, "LAND_ORCHARD" => LandType.LandOrchard, "LAND_GARDEN" => LandType.LandGarden, "OTHER" => LandType.Other, _ => throw new global::StrawberryShake.GraphQLClientException()}

            ;
        }

        public global::System.Object Format(global::System.Object? runtimeValue)
        {
            return runtimeValue switch
            {
            LandType.LandHousing => "LAND_HOUSING", LandType.LandCommercial => "LAND_COMMERCIAL", LandType.LandField => "LAND_FIELD", LandType.LandMeadow => "LAND_MEADOW", LandType.LandForest => "LAND_FOREST", LandType.LandPond => "LAND_POND", LandType.LandOrchard => "LAND_ORCHARD", LandType.LandGarden => "LAND_GARDEN", LandType.Other => "OTHER", _ => throw new global::StrawberryShake.GraphQLClientException()}

            ;
        }
    }
}

// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    /// <summary>
    /// Represents the operation service of the ListingAddPhoto GraphQL operation
    /// <code>
    /// mutation ListingAddPhoto($listingId: ID!, $photoUrl: Url!) {
    ///   listingAddPhoto(listingId: $listingId, photoUrl: $photoUrl) {
    ///     __typename
    ///     ... ListingAddPhotoPayload
    ///   }
    /// }
    /// 
    /// fragment ListingAddPhotoPayload on ListingAddPhotoPayload {
    ///   result {
    ///     __typename
    ///     ... Photo
    ///   }
    /// }
    /// 
    /// fragment Photo on Photo {
    ///   figureId
    ///   url
    ///   originalUrl
    ///   is360
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public interface IListingAddPhotoMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IListingAddPhotoResult>> ExecuteAsync(global::System.String listingId, global::System.Uri photoUrl, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IListingAddPhotoResult>> Watch(global::System.String listingId, global::System.Uri photoUrl, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }
}

// <auto-generated/>
#nullable enable

namespace Logic.Graphql.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.0.0")]
    public partial class GetAllSearchResults_Search_Viewport_Viewport : global::System.IEquatable<GetAllSearchResults_Search_Viewport_Viewport>, IGetAllSearchResults_Search_Viewport_Viewport
    {
        public GetAllSearchResults_Search_Viewport_Viewport(global::Logic.Graphql.Generated.IGetAllSearchResults_Search_Viewport_Top_left top_Left, global::Logic.Graphql.Generated.IGetAllSearchResults_Search_Viewport_Bottom_right bottom_Right)
        {
            Top_left = top_Left;
            Bottom_right = bottom_Right;
        }

        public global::Logic.Graphql.Generated.IGetAllSearchResults_Search_Viewport_Top_left Top_left { get; }

        public global::Logic.Graphql.Generated.IGetAllSearchResults_Search_Viewport_Bottom_right Bottom_right { get; }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetAllSearchResults_Search_Viewport_Viewport)obj);
        }

        public global::System.Boolean Equals(GetAllSearchResults_Search_Viewport_Viewport? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Top_left.Equals(other.Top_left)) && Bottom_right.Equals(other.Bottom_right);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Top_left.GetHashCode();
                hash ^= 397 * Bottom_right.GetHashCode();
                return hash;
            }
        }
    }
}
